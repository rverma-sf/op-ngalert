/*Package api contains base API implementation of unified alerting
 *
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 *
 * Need to remove unused imports.
 */
package api

import (
	"net/http"

	"github.com/go-macaron/binding"
	apimodels "github.com/grafana/alerting-api/pkg/api"
	"github.com/grafana/grafana/pkg/api/response"
	"github.com/grafana/grafana/pkg/api/routing"
	"github.com/grafana/grafana/pkg/infra/log"
	"github.com/grafana/grafana/pkg/middleware"
	"github.com/grafana/grafana/pkg/models"
)

type TestingApiService interface {
	RouteTestReceiverConfig(*models.ReqContext, apimodels.ExtendedReceiver) response.Response
	RouteTestRuleConfig(*models.ReqContext, apimodels.TestRulePayload) response.Response
}

type TestingApiBase struct {
	log log.Logger
}

func (api *API) RegisterTestingApiEndpoints(srv TestingApiService) {
	api.RouteRegister.Group("", func(group routing.RouteRegister) {
		group.Post(toMacaronPath("/api/v1/receiver/test"), binding.Bind(apimodels.ExtendedReceiver{}), routing.Wrap(srv.RouteTestReceiverConfig))
		group.Post(toMacaronPath("/api/v1/rule/test"), binding.Bind(apimodels.TestRulePayload{}), routing.Wrap(srv.RouteTestRuleConfig))
	}, middleware.ReqSignedIn)
}

func (base TestingApiBase) RouteTestReceiverConfig(c *models.ReqContext, body apimodels.ExtendedReceiver) response.Response {
	base.log.Info("RouteTestReceiverConfig: ", "body", body)
	return response.Error(http.StatusNotImplemented, "", nil)
}

func (base TestingApiBase) RouteTestRuleConfig(c *models.ReqContext, body apimodels.TestRulePayload) response.Response {
	base.log.Info("RouteTestRuleConfig: ", "body", body)
	return response.Error(http.StatusNotImplemented, "", nil)
}
